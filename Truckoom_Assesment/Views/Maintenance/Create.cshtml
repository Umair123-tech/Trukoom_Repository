@model Truckoom_Assesment.Models.MaintenanceActivity

@{
    ViewBag.Title = "Create Maintenance Activity";
}

<h2>Create Maintenance Activity</h2>

@using (Html.BeginForm("Create", "Maintenance", FormMethod.Post, new { id = "createForm" }))
{
    @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>MaintenanceActivity</h4>
            <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
            @Html.LabelFor(model => model.VehicleID, "Vehicle", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                @Html.DropDownList("VehicleID", (SelectList)ViewBag.VehicleID, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VehicleID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
            @Html.LabelFor(model => model.MaintenanceType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                @Html.EditorFor(model => model.MaintenanceType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaintenanceType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<!-- Include jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        $("#createForm").submit(function (event) {
            event.preventDefault();
            $.ajax({
                type: "POST",
                url: "/Maintenance/Create",
                data: $(this).serialize(),
                success: function (response) {
                    // Handle success
                    alert("Maintenance activity added successfully!");
                    window.location.href = "/Maintenance/Index";
                },
                error: function (response) {
                    // Handle error
                    alert("Error adding maintenance activity.");
                }
            });
        });
    });
</script>
